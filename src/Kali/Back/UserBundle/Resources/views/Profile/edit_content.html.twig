{% trans_default_domain 'FamilyUserBundle' %}

{% form_theme form 'FamilyUserBundle:Form:form_errors.html.twig' %}

<div class="col-12 col-lg-12">

    <form class="form-horizontal" action="{{ path('fos_user_profile_edit') }}" {{ form_enctype(form) }} method="POST">
        <div id = "divError" style = "display : none;"><span class='alert alert-danger'>{{'getstarted.step_two.error_message'|trans}}</span></div>
        <br>
        <div class="form-group">
            {{ form_label(form.firstname, 'profile.edit.firstname'|trans, { 'label_attr': {'class': 'col-sm-4 control-labell'} }) }}
            {{ form_errors(form.firstname) }}
            <div class="col-sm-8">
                {{ form_widget(form.firstname, { 'attr': {'class': 'form-control'} }) }}
            </div>
        </div>

        <div class="form-group">
            {{ form_label(form.last_name, 'profile.edit.lastname'|trans, { 'label_attr': {'class': 'col-sm-4 control-labell'} }) }}
            {{ form_errors(form.last_name) }}
            <div class="col-sm-8">
                {{ form_widget(form.last_name, { 'attr': {'class': 'form-control'} }) }}
            </div>
        </div>
        <div class="form-group">
            {{ form_label (form.email, 'profile.edit.email'|trans, { 'label_attr': {'class': 'col-sm-4 control-labell'} }) }}   
            <div class="col-sm-8">
                {{ form_widget (form.email, { 'attr': {'class': 'form-control'} }) }}
            {{ form_errors(form.email) }}
            </div>
        </div>
        <div class="form-group">
    {{ form_label (form.birthdate, 'profile.edit.birthdate'|trans, { 'label_attr': {'class': 'col-sm-4 control-labell'} }) }}
            <div class="col-sm-8">
                <div class="date">
                {{ form_widget (form.birthdate.day, { 'attr': {'class': 'form-control'} }) }} 
                </div>
                <div class="date" style="margin-left: 5%">
                    {{ form_widget (form.birthdate.month, { 'attr': {'class': 'form-control'} }) }}  
                </div>
                <div class="date" style="margin-left: 5%">
                {{ form_widget (form.birthdate.year, { 'attr': {'class': 'form-control'} }) }}  
                </div>
                {{ form_errors(form.birthdate) }}

            </div>
        </div>  
        <div class="form-group">
            {{ form_label (form.address.address_one, 'profile.edit.address1'|trans, { 'label_attr': {'class': 'col-sm-4 control-labell'} }) }}
            <div class="col-sm-8">
                {{ form_widget (form.address.address_one, { 'attr': {'class': 'form-control'} }) }}  
                {{ form_errors(form.address.address_one) }}
            </div>
        </div>
        <div class="form-group">
            {{ form_label (form.address.address_two, 'profile.edit.address2'|trans, { 'label_attr': {'class': 'col-sm-4 control-labell'} }) }}
            <div class="col-sm-8">
                {{ form_widget (form.address.address_two, { 'attr': {'class': 'form-control'} }) }}  
                {{ form_errors(form.address.address_two) }}
            </div>
        </div>
        <div class="form-group">
            {{ form_label (form.address.city, 'profile.edit.city'|trans, { 'label_attr': {'class': 'col-sm-4 control-labell'} }) }}
            <div class="col-sm-8">
                {{ form_widget (form.address.city, { 'attr': {'class': 'form-control' , 'autocomplete' : 'off'} }) }}  
                {{ form_errors(form.address.city) }}
                <div id = "results"></div>
            </div>
        </div>
        <div class="form-group" id = "divZip">
                        {{ form_label (form.address.zip_code, 'getstarted.step_three.post_code'|trans, { 'label_attr': {'class': 'col-sm-4 control-labell'} }) }}   
            <div class="col-sm-8">
                            {{ form_widget (form.address.zip_code, { 'attr': {'class': 'form-control' , 'autocomplete' : 'off'} }) }}  
                            {{ form_errors(form.address.zip_code) }}
            </div>
        </div>
        <div class="form-group">
            <label class = "col-sm-4 control-labell">{{ 'getstarted.step_three.country'|trans }}  </label>
            <div class="col-sm-8">
                <input class="form-control" type="text" value="France" disabled >
            </div>
        </div>
        <div class="form-group">
            {{ form_label (form.mobile_phone, 'profile.edit.phone'|trans, { 'label_attr': {'class': 'col-sm-4 control-labell'} }) }}
            <div class="col-sm-8">
                {{ form_widget (form.mobile_phone, { 'attr': {'class': 'form-control'} }) }}  
                {{ form_errors(form.mobile_phone) }}
            </div>
        </div>


        <div>
            {{ form_rest (form) }}
            <div style="float: left; width: 20%;"><input class="btn btn-custom-gray" type = "submit" onclick = "verifCode();
                    return false;" value="{{ 'profile.edit.submit'|trans }}" /></div>
            <div style="float: right;"><a href="{{ path('family_user_profile_changepassword') }}" class="btn btn-custom-gray">{{ 'profile.edit.change_password'|trans }}</a></div>
        </div>
    </form>

</div>
<script type = "text/javascript">

    var reg = /^0[1-8]\d{8}$|^00[0-9]{11,13}$/;

    function verifCode()
    {

        if (document.getElementById("family_edit_user_person_firstname").value == "")
        {
            document.getElementById("family_edit_user_person_firstname").focus();
            document.getElementById("divError").style.display = 'block';
            return false;
        }

        else if (document.getElementById("family_edit_user_person_last_name").value == "")
        {
            document.getElementById("family_edit_user_person_last_name").focus();
            document.getElementById("divError").style.display = 'block';
            return false;
        }

        else if (document.getElementById("family_edit_user_person_birthdate_day").value == "")
        {
            document.getElementById("family_edit_user_person_birthdate_day").focus();
            document.getElementById("divError").style.display = 'block';
            return false;
        }
        else if (document.getElementById("family_edit_user_person_birthdate_month").value == "")
        {
            document.getElementById("family_edit_user_person_birthdate_month").focus();
            document.getElementById("divError").style.display = 'block';
            return false;
        }
        else if (document.getElementById("family_edit_user_person_birthdate_year").value == "")
        {
            document.getElementById("family_edit_user_person_birthdate_year").focus();
            document.getElementById("divError").style.display = 'block';
            return false;
        }
        else if (document.getElementById("family_edit_user_person_address_address_one").value == "")
        {
            document.getElementById("family_edit_user_person_address_address_one").focus();
            document.getElementById("divError").style.display = 'block';
            return false;
        }
        else if (document.getElementById("family_edit_user_person_address_city").value == "")
        {
            document.getElementById("family_edit_user_person_address_city").focus();
            document.getElementById("divError").style.display = 'block';
            return false;
        }

        else if (document.getElementById("family_edit_user_person_address_zip_code").value == "")
        {
            document.getElementById("family_edit_user_person_address_zip_code").focus();
            document.getElementById("divError").style.display = 'block';
            return false;
        }
        else if (document.getElementById("family_edit_user_person_mobile_phone").value == "")
        {
            document.getElementById("family_edit_user_person_mobile_phone").focus();
            document.getElementById("divError").style.display = 'block';
            return false;
        }
        else if (reg.test($("#family_edit_user_person_mobile_phone").val()) == false)
        {
            document.getElementById("family_edit_user_person_mobile_phone").focus();
            document.getElementById("divError").innerHTML = "<span class='alert alert-danger'>Vous devez saisir un numéro de téléphone valide</span>";
            document.getElementById("divError").style.display = 'block';
            return false;
        }

        else
        {
            $(".form-horizontal").submit();
            document.getElementById("divError").style.display = 'none';
            return true;
        }

    }

    function changeCountry()
    {
        document.getElementById("family_edit_user_person_address_zip_code").value = "";
        document.getElementById("family_edit_user_person_address_city").value = "";
        document.getElementById("results").innerHTML = "";
        document.getElementById("results").style.display = "none";
    }
    $(document).ready(function() {

        var searchElement = document.getElementById('family_edit_user_person_address_city'),
                searchValue = searchElement.value,
                results = document.getElementById('results'),
                selectedResult = -1,
                previousRequest,
                previousValue = searchElement.value;
        country = 1;


        function getResults(keywords) { // Effectue une requête et récupère les résultats

            var xhr = new XMLHttpRequest();
            xhr.open('GET', '../ajaxcity?s=' + encodeURIComponent(keywords) + '&country=' + country);

            xhr.onreadystatechange = function() {
                if (xhr.readyState == 4 && xhr.status == 200) {

                    displayResults(xhr.responseText);

                }
            };

            xhr.send(null);

            return xhr;
        }

        function displayResults(response) { // Affiche les résultats d'une requête

            results.style.display = response.length ? 'block' : 'none'; // On cache le conteneur si on n'a pas de résultats

            if (response.length) {



                var jsonResponse = eval('(' + response + ')');
                var responseLen = jsonResponse.length;
                results.innerHTML = '';
                document.getElementById("family_edit_user_person_address_zip_code").value = "";
                for (var i = 0, div; i < responseLen; i++) {

                    div = results.appendChild(document.createElement('div'));
                    div.innerHTML = '<div id = "resultCity">  &nbsp&nbsp&nbsp&nbsp' + jsonResponse[i][i]["city"] + ' (' + jsonResponse[i][i]["zipCode"] + ') <input type = "hidden"  value = "' + jsonResponse[i][i]["city"] + '"/> <input type = "hidden" value = "' + jsonResponse[i][i]["zipCode"] + '"/></div>';
                    div.onclick = function() {

                        chooseResult(this);

                    };

                }
            }

        }

        function chooseResult(result) {
            inputCity = result.getElementsByTagName('input');
            resultCity = inputCity[0].value;
            resultZip = inputCity[1].value;
            searchElement.value = previousValue = resultCity;
            results.style.display = 'none';
            selectedResult = -1;
            searchElement.focus();
            document.getElementById("family_edit_user_person_address_zip_code").value = resultZip;
        }



        searchElement.onkeyup = function(e) {
            if (1 == 1)
            {
                e = e || window.event;

                var divs = results.getElementsByTagName('div');

                if (searchElement.value != previousValue) {

                    previousValue = searchElement.value;

                    if (previousRequest && previousRequest.readyState < 4) {
                        previousRequest.abort(); // Si on a toujours une requête en cours, on l'arrête
                    }

                    previousRequest = getResults(previousValue); // On stocke la nouvelle requête

                    selectedResult = -1; // On remet la sélection à zéro à chaque caractère écrit

                }
            }

        };

    });
</script>
